
//
// Helper functions to generate blocks of css for you
//

// buttons
@mixin buttons {
    .generated_button,
    .pagination a,
    button,
    input[type="submit"],
    input[type="button"],
    input[type="reset"] {
        @content;
    }
}

// media query breakpoints
// e.g. @include breakpoint (sm) { ... }
// e.g. @include breakpoint (30em) { ... }
@mixin breakpoint($size, $feature:min) {

    @if $size == xs {
        $size: 35.5em;
        $feature: max;
    }
    @if $size == sm {
        $size: 35.5em;
    }
    @if $size == md {
        $size: 48em;
    }
    @if $size == lg {
        $size: 64em;
    }
    @if $size == xl {
        $size: 80em;
    }

    @media screen and (#{$feature}-width: #{$size}) {
        @content;
    }
}

// page mixin, to target specific pages
@mixin page($name) {
    /* styled for "#{$name}" page only */
    body#body_#{str-replace(to-lower-case($name),' ','')} {
        @content;
    }
}

// Replace `$search` with `$replace` in `$string`
// https://css-tricks.com/snippets/sass/str-replace-function/
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}
